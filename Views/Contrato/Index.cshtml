@model IEnumerable<ProyectoInmobiliaria.Models.Contrato>
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    var pagosPorContrato = ViewBag.PagosPorContrato as Dictionary<int, int> ?? new Dictionary<int, int>();
    int pagina = ViewBag.Pagina ?? 1;
    int totalPaginas = ViewBag.TotalPaginas ?? 1;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="mb-0">Lista de Contratos</h2>
        <a asp-action="Crear" class="btn btn-success">
            <i class="bi bi-plus-lg me-1"></i> Nuevo Contrato
        </a>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-header">
            <i class="bi bi-funnel-fill me-2"></i><strong>Filtros de Búsqueda</strong>
        </div>
        <div class="card-body">
            <form method="get">
                <div class="row g-3 align-items-end">

                    <div class="col-lg-5 col-md-12">
                        <label class="form-label">Contratos vigentes en un período</label>
                        <div class="input-group">
                            <input type="date" name="desde" class="form-control" value="@ViewBag.Desde" title="Fecha Desde">
                            <span class="input-group-text">-</span>
                            <input type="date" name="hasta" class="form-control" value="@ViewBag.Hasta" title="Fecha Hasta">
                            <button type="submit" class="btn btn-primary" asp-action="Vigentes" title="Filtrar por fechas">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </div>

                    <div class="col-lg-4 col-md-12">
                        <label class="form-label">Contratos próximos a vencer</label>
                        <div class="input-group">
                            <select name="dias" class="form-select">
                                <option value="">Seleccionar plazo...</option>
                                <option value="30" selected="@(ViewBag.Dias == 30)">En 30 días</option>
                                <option value="60" selected="@(ViewBag.Dias == 60)">En 60 días</option>
                                <option value="90" selected="@(ViewBag.Dias == 90)">En 90 días</option>
                            </select>
                            <button type="submit" class="btn btn-warning" asp-action="PorPlazo" title="Ver próximos vencimientos">
                                <i class="bi bi-alarm"></i>
                            </button>
                        </div>
                    </div>
                    
                    <div class="col-lg-3 col-md-12">
                        <div class="d-grid">
                             <a asp-action="Index" class="btn btn-secondary">
                                <i class="bi bi-eraser me-1"></i> Limpiar Filtros
                            </a>
                        </div>
                    </div>

                </div>
            </form>
        </div>
    </div>

    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info shadow-sm" role="alert">
            <i class="bi bi-info-circle-fill me-2"></i>
            @TempData["InfoMessage"]
        </div>
    }

    <table class="table table-striped table-hover table-bordered shadow-sm rounded text-center align-middle">
        <thead class="table-dark">
            <tr>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Precio</th>
                <th>Estado</th>
                <th>Inquilino</th>
                <th>Dirección Inmueble</th>
                <th style="min-width: 500px;">Acciones</th>
            </tr>
        </thead>
        <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="7" class="text-center py-4 text-muted">
                    No se encontraron contratos para mostrar.
                </td>
            </tr>
        }
        else
        {
            @foreach (var c in Model)
            {
                var pagosRegistrados = pagosPorContrato.ContainsKey(c.IdContrato) ? pagosPorContrato[c.IdContrato] : 0;
                bool contratoFinalizado = c.Estado == "Inactivo" || c.Estado == "Finalizado";

                <tr>
                    <td>@c.FechaInicio.ToString("dd/MM/yyyy")</td>
                    <td>@c.FechaFin.ToString("dd/MM/yyyy")</td>
                    <td>@c.Precio.ToString("C0")</td>
                    <td>
                        <span class="badge @(c.Estado == "Activo" ? "bg-success" : "bg-secondary")">
                            @c.Estado
                        </span>
                    </td>
                    <td>@c.Inquilino?.Nombre @c.Inquilino?.Apellido</td>
                    <td>@c.Inmueble?.Direccion</td>
                    <td>
                        <div class="btn-group flex-wrap" role="group">
                            <a asp-action="Detalle" asp-route-id="@c.IdContrato" class="btn btn-sm btn-info text-white">Ver</a>
                            <a asp-action="Editar" asp-route-id="@c.IdContrato" class="btn btn-sm btn-warning text-dark">Editar</a>
                            <a asp-action="Eliminar" asp-route-id="@c.IdContrato" class="btn btn-sm btn-danger">Eliminar</a>
                            <a asp-controller="Pagos" asp-action="Index" asp-route-contratoId="@c.IdContrato" class="btn btn-sm btn-success">Pagos</a>

                            <button type="button"
                                    class="btn btn-sm btn-danger btn-terminar"
                                    data-contrato="@c.IdContrato"
                                    data-pagos="@pagosRegistrados"
                                    @(contratoFinalizado ? "disabled" : "")>
                                Terminar Anticipadamente
                            </button>

                            @if (pagosRegistrados >= 6 && contratoFinalizado)
                            {
                                <a asp-action="Renovar" asp-route-id="@c.IdContrato" class="btn btn-sm btn-primary">Renovar</a>
                            }
                            else
                            {
                                <button class="btn btn-sm btn-primary" disabled>Renovar</button>
                            }
                        </div>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>

    @if (totalPaginas > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(pagina <= 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pagina="@(pagina - 1)">Anterior</a>
                </li>

                @for (int i = 1; i <= totalPaginas; i++)
                {
                    <li class="page-item @(i == pagina ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pagina="@i">@i</a>
                    </li>
                }

                <li class="page-item @(pagina >= totalPaginas ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pagina="@(pagina + 1)">Siguiente</a>
                </li>
            </ul>
        </nav>
    }
</div>

<div class="modal fade" id="modalNoPago" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-warning text-dark">
        <h5 class="modal-title">Pago Pendiente</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        No se puede finalizar anticipadamente: Se adeuda un pago.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>

<div class="toast-container position-fixed top-0 end-0 p-3">
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successToast" class="toast align-items-center text-bg-success border-0 shadow-lg"
             role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    @TempData["SuccessMessage"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    }

    @if (TempData["DeleteMessage"] != null)
    {
        <div id="deleteToast" class="toast align-items-center text-bg-danger border-0 shadow-lg"
             role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    @TempData["DeleteMessage"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto"
                        data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    }
</div>

@section Scripts {
<script>
document.addEventListener("DOMContentLoaded", function () {
    const botones = document.querySelectorAll(".btn-terminar");

    botones.forEach(btn => {
        btn.addEventListener("click", function (e) {
            if (btn.disabled) return;

            const pagos = parseInt(btn.getAttribute("data-pagos"));
            const contratoId = btn.getAttribute("data-contrato");

            if (pagos < 1) {
                e.preventDefault();
                const modal = new bootstrap.Modal(document.getElementById('modalNoPago'));
                modal.show();
            } else {
                window.location.href = `/Contrato/TerminarAnticipado?id=${contratoId}`;
            }
        });
    });
});
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var successEl = document.getElementById('successToast');
        if (successEl) {
            new bootstrap.Toast(successEl, { delay: 4000 }).show();
        }

        var deleteEl = document.getElementById('deleteToast');
        if (deleteEl) {
            new bootstrap.Toast(deleteEl, { delay: 4000 }).show();
        }
    });
</script>
}